# 1. Stack 생성
# aws cloudformation create-stack \
#   --stack-name stack-weplat2-ap2-ecs-service \
#   --template-body file://ecs/04_ecs_service_cloudformation.yaml \
#   --capabilities CAPABILITY_NAMED_IAM
# 2. Stack 업데이트
# aws cloudformation update-stack \
# --stack-name stack-weplat2-ap2-ecs-service \
# --template-body file://ecs/04_ecs_service_cloudformation.yaml \
# --capabilities CAPABILITY_NAMED_IAM
# 3. Stack 삭제
# aws cloudformation delete-stack --stack-name stack-weplat2-ap2-ecs-service
# 4. Stack 상태 확인
# aws cloudformation describe-stacks --stack-name stack-weplat2-ap2-ecs-service
# 5. Stack 스택 로그 확인
# aws cloudformation describe-stack-events --stack-name stack-weplat2-ap2-ecs-service

AWSTemplateFormatVersion: "2010-09-09"
Description: "The template used to create an ECS Service from the ECS Console."

Resources:
  ECSService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !ImportValue AppEcsCluster
      TaskDefinition: !ImportValue AppWebTaskDefinitionArn
      LaunchType: "FARGATE"
      ServiceName: "app-web-service"
      SchedulingStrategy: "REPLICA"
      DesiredCount: 2
      AvailabilityZoneRebalancing: "ENABLED"
      LoadBalancers:
        - ContainerName: "app-web"
          ContainerPort: 8000
          LoadBalancerName: !Ref "AWS::NoValue"
          TargetGroupArn: !ImportValue AppWebAlbTgArn
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: "DISABLED"
          SecurityGroups:
            - !ImportValue WeplatAp2WebSGId
          Subnets:
            - !ImportValue WeplatSubnetPrivate1Id
            - !ImportValue WeplatSubnetPrivate2Id
      PlatformVersion: "LATEST"
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
        DeploymentCircuitBreaker:
          Enable: true
          Rollback: true
      DeploymentController:
        Type: "ECS"
      ServiceConnectConfiguration:
        Enabled: false
      Tags: []
      EnableECSManagedTags: true

  AutoScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: "4"
      MinCapacity: "2"
      ResourceId: !Join ["/", [service, !ImportValue AppEcsCluster, "app-web-service"]]
      RoleARN:  !ImportValue ECSAutoScalingRoleArn
      ScalableDimension: "ecs:service:DesiredCount"
      ServiceNamespace: "ecs"
    DependsOn:
      - ECSService

  AutoScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: "app-web-asg-policy"
      PolicyType: "TargetTrackingScaling"
      ResourceId: !Join ["/", [service, !ImportValue AppEcsCluster, "app-web-service"]]
      ScalingTargetId: !Ref AutoScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        ScaleInCooldown: "300"
        ScaleOutCooldown: "300"
        TargetValue: "70"
        PredefinedMetricSpecification:
          PredefinedMetricType: "ECSServiceAverageCPUUtilization"

Outputs:
  ECSService:
    Description: "The created service."
    Value: !Ref "ECSService"
  AutoScalingTarget:
    Value: !Ref "AutoScalingTarget"
  AutoScalingPolicy:
    Value: !Ref "AutoScalingPolicy"