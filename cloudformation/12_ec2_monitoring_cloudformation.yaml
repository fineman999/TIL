# 1. stack 생성
# aws cloudformation create-stack --stack-name stack-weplat2-ap2-ec2-monitoring --template-body file://12_ec2_monitoring_cloudformation.yaml --capabilities CAPABILITY_NAMED_IAM
# 2. stack 업데이트
# aws cloudformation update-stack --stack-name stack-weplat2-ap2-ec2-monitoring --template-body file://12_ec2_monitoring_cloudformation.yaml --capabilities CAPABILITY_NAMED_IAM
# 3. stack 삭제
# aws cloudformation delete-stack --stack-name stack-weplat2-ap2-ec2-monitoring
# 4. stack 이벤트 확인
# aws cloudformation describe-stack-events --stack-name stack-weplat2-ap2-ec2-monitoring
# 5. stack 리소스 확인
# aws cloudformation describe-stack-resources --stack-name stack-weplat2-ap2-ec2-monitoring
AWSTemplateFormatVersion: "2010-09-09"
Description: CloudWatch Agent Configuration for EC2 Instances

Resources:
  # 1️⃣ CloudWatch Logs 그룹 생성 (로그 보관 7일 설정)
  WebAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: web_access_log
      RetentionInDays: 7

  WebErrorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: web_error_log
      RetentionInDays: 7

  # 2️⃣ CloudWatch Agent 설정을 SSM Parameter Store에 저장
  CloudWatchAgentConfig:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/CloudWatchAgent/Config"
      Type: String
      Value: |
        {
          "agent": {
            "metrics_collection_interval": 60,
            "run_as_user": "root"
          },
          "logs": {
            "logs_collected": {
              "files": {
                "collect_list": [
                  {
                    "file_path": "/var/log/httpd/access_log",
                    "log_group_name": "web_access_log",
                    "log_stream_name": "{instance_id}",
                    "retention_in_days": 7
                  },
                  {
                    "file_path": "/var/log/httpd/error_log",
                    "log_group_name": "web_error_log",
                    "log_stream_name": "{instance_id}",
                    "retention_in_days": 7
                  }
                ]
              }
            }
          },
          "metrics": {
            "aggregation_dimensions": [
              ["InstanceId"]
            ],
            "append_dimensions": {
              "AutoScalingGroupName": "${aws:AutoScalingGroupName}",
              "ImageId": "${aws:ImageId}",
              "InstanceId": "${aws:InstanceId}",
              "InstanceType": "${aws:InstanceType}"
            },
            "metrics_collected": {
              "disk": {
                "measurement": ["used_percent"],
                "metrics_collection_interval": 60,
                "resources": ["*"]
              },
              "mem": {
                "measurement": ["mem_used_percent"],
                "metrics_collection_interval": 60
              }
            }
          }
        }
      Description: "CloudWatch Agent Configuration"

  # 3️⃣ IAM Role 및 Policy (EC2가 CloudWatch에 로그 및 메트릭 전송 가능)
  CloudWatchAgentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CloudWatchAgentRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy

  # 4️⃣ IAM Instance Profile 생성
  CloudWatchAgentInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: CloudWatchAgentInstanceProfile
      Roles:
        - !Ref CloudWatchAgentRole

Outputs:
  CloudWatchAgentRoleArn:
    Description: "IAM Role ARN for CloudWatch Agent"
    Value: !GetAtt CloudWatchAgentRole.Arn
    Export:
      Name: CloudWatchAgentRoleArn

  CloudWatchAgentInstanceProfile:
    Description: "IAM Instance Profile for CloudWatch Agent"
    Value: !Ref CloudWatchAgentInstanceProfile
    Export:
      Name: CloudWatchAgentInstanceProfile