server:
  port: 8081

spring:
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: oauth2-client-app
            client-secret: naPA94uPKQ8VAuZuj6L1o7PXhIVa6VDX
            client-name: OAuth2 Client App
            redirect-uri: http://localhost:8081/login/oauth2/code/keycloak
            authorization-grant-type: authorization_code
            client-authentication-method: client_secret_post
            scope: profile, email, openid
            provider: keycloak

          google:
            client-id: {google-client-id}
            client-secret: {google-client-secret}
            scope: profile, email, openid

          naver:
            client-id: {naver-client-id}
            client-secret: {naver-client-secret}
            authorization-grant-type: authorization_code
            client-name: naver-spring-oauth2
            redirect-uri: http://localhost:8081/login/oauth2/code/naver
            scope: profile, email
            provider: naver

        provider:
          keycloak:
            authorization-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/auth
            token-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/token
            issuer-uri: http://localhost:8080/realms/oauth2
            user-info-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8080/realms/oauth2/protocol/openid-connect/certs
            user-name-attribute: preferred_username # scope? profile

          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize # 임시 코드 발급
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

