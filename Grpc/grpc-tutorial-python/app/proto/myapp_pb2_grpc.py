# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from app.proto import myapp_pb2 as app_dot_proto_dot_myapp__pb2


class MyAppStub(object):
    """The myapp service definition.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SayHello = channel.unary_unary(
                '/myapp.MyApp/SayHello',
                request_serializer=app_dot_proto_dot_myapp__pb2.HelloRequest.SerializeToString,
                response_deserializer=app_dot_proto_dot_myapp__pb2.HelloReply.FromString,
                _registered_method=True)


class MyAppServicer(object):
    """The myapp service definition.
    """

    def SayHello(self, request, context):
        """Sends a greeting
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MyAppServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SayHello': grpc.unary_unary_rpc_method_handler(
                    servicer.SayHello,
                    request_deserializer=app_dot_proto_dot_myapp__pb2.HelloRequest.FromString,
                    response_serializer=app_dot_proto_dot_myapp__pb2.HelloReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'myapp.MyApp', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('myapp.MyApp', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MyApp(object):
    """The myapp service definition.
    """

    @staticmethod
    def SayHello(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/myapp.MyApp/SayHello',
            app_dot_proto_dot_myapp__pb2.HelloRequest.SerializeToString,
            app_dot_proto_dot_myapp__pb2.HelloReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
